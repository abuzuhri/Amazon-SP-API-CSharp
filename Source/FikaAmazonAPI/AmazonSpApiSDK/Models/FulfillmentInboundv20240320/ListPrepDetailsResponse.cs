/* 
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;

namespace FikaAmazonAPI.AmazonSpApiSDK.Models.FulfillmentInboundv20240320
{
    /// <summary>
    /// The response to the &#x60;listPrepDetails&#x60; operation.
    /// </summary>
    [DataContract]
    public partial class ListPrepDetailsResponse : IEquatable<ListPrepDetailsResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ListPrepDetailsResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        public ListPrepDetailsResponse() {
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="ListPrepDetailsResponse" /> class.
        /// </summary>
        /// <param name="mskuPrepDetails">A list of MSKUs and related prep details. (required).</param>
        public ListPrepDetailsResponse(List<MskuPrepDetail> mskuPrepDetails = default(List<MskuPrepDetail>))
        {
            // to ensure "mskuPrepDetails" is required (not null)
            if (mskuPrepDetails == null)
            {
                throw new InvalidDataException("mskuPrepDetails is a required property for ListPrepDetailsResponse and cannot be null");
            }
            else
            {
                this.MskuPrepDetails = mskuPrepDetails;
            }
        }

        /// <summary>
        /// A list of MSKUs and related prep details.
        /// </summary>
        /// <value>A list of MSKUs and related prep details.</value>
        [DataMember(Name = "mskuPrepDetails", EmitDefaultValue = false)]
        public List<MskuPrepDetail> MskuPrepDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ListPrepDetailsResponse {\n");
            sb.Append("  MskuPrepDetails: ").Append(MskuPrepDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ListPrepDetailsResponse);
        }

        /// <summary>
        /// Returns true if ListPrepDetailsResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ListPrepDetailsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ListPrepDetailsResponse input)
        {
            if (input == null)
                return false;

            return
                (
                    this.MskuPrepDetails == input.MskuPrepDetails ||
                    this.MskuPrepDetails != null &&
                    this.MskuPrepDetails.SequenceEqual(input.MskuPrepDetails)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MskuPrepDetails != null)
                    hashCode = hashCode * 59 + this.MskuPrepDetails.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
