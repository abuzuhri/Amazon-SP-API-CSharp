/* 
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;

namespace FikaAmazonAPI.AmazonSpApiSDK.Models.FulfillmentInboundv20240320
{
    /// <summary>
    /// &#x60;listTransportationOptions&#x60; response.
    /// </summary>
    [DataContract]
    public partial class ListTransportationOptionsResponse :  IEquatable<ListTransportationOptionsResponse>, IValidatableObject
    {
       
        /// <summary>
        /// Initializes a new instance of the <see cref="ListTransportationOptionsResponse" /> class.
        /// </summary>
        /// <param name="pagination">pagination.</param>
        /// <param name="transportationOptions">Transportation options generated for the placement option. (required).</param>
        public ListTransportationOptionsResponse(Pagination pagination = default(Pagination), List<TransportationOption> transportationOptions = default(List<TransportationOption>))
        {
            // to ensure "transportationOptions" is required (not null)
            if (transportationOptions == null)
            {
                throw new InvalidDataException("transportationOptions is a required property for ListTransportationOptionsResponse and cannot be null");
            }
            else
            {
                this.TransportationOptions = transportationOptions;
            }
            this.Pagination = pagination;
        }
        public ListTransportationOptionsResponse()
        {
            this.TransportationOptions = default(List<TransportationOption>);
            this.Pagination = default(Pagination);
        }

        /// <summary>
        /// Gets or Sets Pagination
        /// </summary>
        [DataMember(Name="pagination", EmitDefaultValue=false)]
        public Pagination Pagination { get; set; }

        /// <summary>
        /// Transportation options generated for the placement option.
        /// </summary>
        /// <value>Transportation options generated for the placement option.</value>
        [DataMember(Name="transportationOptions", EmitDefaultValue=false)]
        public List<TransportationOption> TransportationOptions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ListTransportationOptionsResponse {\n");
            sb.Append("  Pagination: ").Append(Pagination).Append("\n");
            sb.Append("  TransportationOptions: ").Append(TransportationOptions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ListTransportationOptionsResponse);
        }

        /// <summary>
        /// Returns true if ListTransportationOptionsResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ListTransportationOptionsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ListTransportationOptionsResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Pagination == input.Pagination ||
                    (this.Pagination != null &&
                    this.Pagination.Equals(input.Pagination))
                ) && 
                (
                    this.TransportationOptions == input.TransportationOptions ||
                    this.TransportationOptions != null &&
                    this.TransportationOptions.SequenceEqual(input.TransportationOptions)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Pagination != null)
                    hashCode = hashCode * 59 + this.Pagination.GetHashCode();
                if (this.TransportationOptions != null)
                    hashCode = hashCode * 59 + this.TransportationOptions.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
