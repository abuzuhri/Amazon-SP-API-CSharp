/* 
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;

namespace FikaAmazonAPI.AmazonSpApiSDK.Models.FulfillmentInboundv20240320
{
    /// <summary>
    /// The &#x60;generateTransportationOptions&#x60; request.
    /// </summary>
    [DataContract]
    public partial class GenerateTransportationOptionsRequest :  IEquatable<GenerateTransportationOptionsRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GenerateTransportationOptionsRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        public GenerateTransportationOptionsRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GenerateTransportationOptionsRequest" /> class.
        /// </summary>
        /// <param name="placementOptionId">The placement option to generate transportation options for. (required).</param>
        /// <param name="shipmentTransportationConfigurations">List of shipment transportation configurations. (required).</param>
        public GenerateTransportationOptionsRequest(string placementOptionId = default(string),
                                                    List<ShipmentTransportationConfiguration> shipmentTransportationConfigurations = default(List<ShipmentTransportationConfiguration>))
        {
            // to ensure "placementOptionId" is required (not null)
            if (placementOptionId == null)
            {
                throw new InvalidDataException("placementOptionId is a required property for GenerateTransportationOptionsRequest and cannot be null");
            }
            else
            {
                this.PlacementOptionId = placementOptionId;
            }
            // to ensure "shipmentTransportationConfigurations" is required (not null)
            if (shipmentTransportationConfigurations == null)
            {
                throw new InvalidDataException("shipmentTransportationConfigurations is a required property for GenerateTransportationOptionsRequest and cannot be null");
            }
            else
            {
                this.ShipmentTransportationConfigurations = shipmentTransportationConfigurations;
            }
        }
        
        /// <summary>
        /// The placement option to generate transportation options for.
        /// </summary>
        /// <value>The placement option to generate transportation options for.</value>
        [DataMember(Name="placementOptionId", EmitDefaultValue=false)]
        public string PlacementOptionId { get; set; }

        /// <summary>
        /// List of shipment transportation configurations.
        /// </summary>
        /// <value>List of shipment transportation configurations.</value>
        [DataMember(Name="shipmentTransportationConfigurations", EmitDefaultValue=false)]
        public List<ShipmentTransportationConfiguration> ShipmentTransportationConfigurations { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GenerateTransportationOptionsRequest {\n");
            sb.Append("  PlacementOptionId: ").Append(PlacementOptionId).Append("\n");
            sb.Append("  ShipmentTransportationConfigurations: ").Append(ShipmentTransportationConfigurations).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GenerateTransportationOptionsRequest);
        }

        /// <summary>
        /// Returns true if GenerateTransportationOptionsRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of GenerateTransportationOptionsRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GenerateTransportationOptionsRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PlacementOptionId == input.PlacementOptionId ||
                    (this.PlacementOptionId != null &&
                    this.PlacementOptionId.Equals(input.PlacementOptionId))
                ) && 
                (
                    this.ShipmentTransportationConfigurations == input.ShipmentTransportationConfigurations ||
                    this.ShipmentTransportationConfigurations != null &&
                    this.ShipmentTransportationConfigurations.SequenceEqual(input.ShipmentTransportationConfigurations)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PlacementOptionId != null)
                    hashCode = hashCode * 59 + this.PlacementOptionId.GetHashCode();
                if (this.ShipmentTransportationConfigurations != null)
                    hashCode = hashCode * 59 + this.ShipmentTransportationConfigurations.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PlacementOptionId (string) maxLength
            if(this.PlacementOptionId != null && this.PlacementOptionId.Length > 38)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PlacementOptionId, length must be less than 38.", new [] { "PlacementOptionId" });
            }

            // PlacementOptionId (string) minLength
            if(this.PlacementOptionId != null && this.PlacementOptionId.Length < 38)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PlacementOptionId, length must be greater than 38.", new [] { "PlacementOptionId" });
            }

            // PlacementOptionId (string) pattern
            Regex regexPlacementOptionId = new Regex(@"^[a-zA-Z0-9-]*$", RegexOptions.CultureInvariant);
            if (false == regexPlacementOptionId.Match(this.PlacementOptionId).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PlacementOptionId, must match a pattern of " + regexPlacementOptionId, new [] { "PlacementOptionId" });
            }

            yield break;
        }
    }

}
