/* 
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;

namespace FikaAmazonAPI.AmazonSpApiSDK.Models.FulfillmentInboundv20240320
{
    /// <summary>
    /// The createMarketplaceItemLabels response.
    /// </summary>
    [DataContract]
    public partial class CreateMarketplaceItemLabelsResponse : IEquatable<CreateMarketplaceItemLabelsResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateMarketplaceItemLabelsResponse" /> class.
        /// </summary>
        public CreateMarketplaceItemLabelsResponse()
        {
            this.DocumentDownloads = default(List<DocumentDownload>);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CreateMarketplaceItemLabelsResponse" /> class.
        /// </summary>
        /// <param name="documentDownloads">Resources to download the requested document. (required)</param>
        public CreateMarketplaceItemLabelsResponse(List<DocumentDownload> documentDownloads = default(List<DocumentDownload>))
        {
            // to ensure "documentDownloads" is required (not null)
            if (documentDownloads == null)
            {
                throw new InvalidDataException("documentDownloads is a required property for CreateMarketplaceItemLabelsResponse and cannot be null");
            }
            else
            {
                DocumentDownloads = documentDownloads;
            }
        }

        /// <summary>
        /// Resources to download the requested document.
        /// </summary>
        [DataMember(Name = "documentDownloads", EmitDefaultValue = false)]
        public List<DocumentDownload> DocumentDownloads { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateMarketplaceItemLabelsResponse {\n");
            sb.Append("  DocumentDownloads: ").Append(DocumentDownloads).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as CreateMarketplaceItemLabelsResponse);
        }

        /// <summary>
        /// Returns true if CreateMarketplaceItemLabelsResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of CreateMarketplaceItemLabelsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateMarketplaceItemLabelsResponse input)
        {
            if (input == null)
                return false;

            return
                
                    DocumentDownloads == input.DocumentDownloads ||
                    DocumentDownloads != null &&
                    DocumentDownloads.SequenceEqual(input.DocumentDownloads)
                ;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (DocumentDownloads != null)
                    hashCode = hashCode * 59 + DocumentDownloads.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}