/* 
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;

namespace FikaAmazonAPI.AmazonSpApiSDK.Models.FulfillmentInboundv20240320
{
    /// <summary>
    /// &#x60;listInboundPlanPallets&#x60; response.
    /// </summary>
    [DataContract]
    public partial class ListInboundPlanPalletsResponse :  IEquatable<ListInboundPlanPalletsResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ListInboundPlanPalletsResponse" /> class.
        /// </summary>
        /// <param name="pagination">pagination.</param>
        /// <param name="pallets">The pallets in an inbound plan. (required).</param>
        public ListInboundPlanPalletsResponse(Pagination pagination = default(Pagination), List<Pallet> pallets = default(List<Pallet>))
        {
            // to ensure "pallets" is required (not null)
            if (pallets == null)
            {
                throw new InvalidDataException("pallets is a required property for ListInboundPlanPalletsResponse and cannot be null");
            }
            else
            {
                this.Pallets = pallets;
            }
            this.Pagination = pagination;
        }
        public ListInboundPlanPalletsResponse()
        {
            this.Pallets = default(List<Pallet>);
            this.Pagination = default(Pagination);
        }

        /// <summary>
        /// Gets or Sets Pagination
        /// </summary>
        [DataMember(Name="pagination", EmitDefaultValue=false)]
        public Pagination Pagination { get; set; }

        /// <summary>
        /// The pallets in an inbound plan.
        /// </summary>
        /// <value>The pallets in an inbound plan.</value>
        [DataMember(Name="pallets", EmitDefaultValue=false)]
        public List<Pallet> Pallets { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ListInboundPlanPalletsResponse {\n");
            sb.Append("  Pagination: ").Append(Pagination).Append("\n");
            sb.Append("  Pallets: ").Append(Pallets).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ListInboundPlanPalletsResponse);
        }

        /// <summary>
        /// Returns true if ListInboundPlanPalletsResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ListInboundPlanPalletsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ListInboundPlanPalletsResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Pagination == input.Pagination ||
                    (this.Pagination != null &&
                    this.Pagination.Equals(input.Pagination))
                ) && 
                (
                    this.Pallets == input.Pallets ||
                    this.Pallets != null &&
                    this.Pallets.SequenceEqual(input.Pallets)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Pagination != null)
                    hashCode = hashCode * 59 + this.Pagination.GetHashCode();
                if (this.Pallets != null)
                    hashCode = hashCode * 59 + this.Pallets.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
