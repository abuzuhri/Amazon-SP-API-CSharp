/* 
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace FikaAmazonAPI.AmazonSpApiSDK.Models.FulfillmentInboundv20240320
{
    /// <summary>
    /// Contains item identifiers and related tax information.
    /// </summary>
    [DataContract]
    public partial class ComplianceDetail :  IEquatable<ComplianceDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComplianceDetail" /> class.
        /// </summary>
        /// <param name="asin">The Amazon Standard Identification Number, which identifies the detail page identifier..</param>
        /// <param name="fnsku">The Fulfillment Network SKU, which identifies a real fulfillable item with catalog data and condition..</param>
        /// <param name="msku">The merchant SKU, a merchant-supplied identifier for a specific SKU..</param>
        /// <param name="taxDetails">Information used to determine the tax compliance.</param>
        public ComplianceDetail(string asin = default(string), string fnsku = default(string), string msku = default(string), TaxDetails taxDetails = default(TaxDetails))
        {
            this.Asin = asin;
            this.Fnsku = fnsku;
            this.Msku = msku;
            this.TaxDetails = taxDetails;
        }
        
        /// <summary>
        /// The Amazon Standard Identification Number, which identifies the detail page identifier.
        /// </summary>
        /// <value>The Amazon Standard Identification Number, which identifies the detail page identifier.</value>
        [DataMember(Name="asin", EmitDefaultValue=false)]
        public string Asin { get; set; }

        /// <summary>
        /// The Fulfillment Network SKU, which identifies a real fulfillable item with catalog data and condition.
        /// </summary>
        /// <value>The Fulfillment Network SKU, which identifies a real fulfillable item with catalog data and condition.</value>
        [DataMember(Name="fnsku", EmitDefaultValue=false)]
        public string Fnsku { get; set; }

        /// <summary>
        /// The merchant SKU, a merchant-supplied identifier for a specific SKU.
        /// </summary>
        /// <value>The merchant SKU, a merchant-supplied identifier for a specific SKU.</value>
        [DataMember(Name="msku", EmitDefaultValue=false)]
        public string Msku { get; set; }

        /// <summary>
        /// Gets or Sets TaxDetails
        /// </summary>
        [DataMember(Name="taxDetails", EmitDefaultValue=false)]
        public TaxDetails TaxDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComplianceDetail {\n");
            sb.Append("  Asin: ").Append(Asin).Append("\n");
            sb.Append("  Fnsku: ").Append(Fnsku).Append("\n");
            sb.Append("  Msku: ").Append(Msku).Append("\n");
            sb.Append("  TaxDetails: ").Append(TaxDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComplianceDetail);
        }

        /// <summary>
        /// Returns true if ComplianceDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of ComplianceDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComplianceDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Asin == input.Asin ||
                    (this.Asin != null &&
                    this.Asin.Equals(input.Asin))
                ) && 
                (
                    this.Fnsku == input.Fnsku ||
                    (this.Fnsku != null &&
                    this.Fnsku.Equals(input.Fnsku))
                ) && 
                (
                    this.Msku == input.Msku ||
                    (this.Msku != null &&
                    this.Msku.Equals(input.Msku))
                ) && 
                (
                    this.TaxDetails == input.TaxDetails ||
                    (this.TaxDetails != null &&
                    this.TaxDetails.Equals(input.TaxDetails))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Asin != null)
                    hashCode = hashCode * 59 + this.Asin.GetHashCode();
                if (this.Fnsku != null)
                    hashCode = hashCode * 59 + this.Fnsku.GetHashCode();
                if (this.Msku != null)
                    hashCode = hashCode * 59 + this.Msku.GetHashCode();
                if (this.TaxDetails != null)
                    hashCode = hashCode * 59 + this.TaxDetails.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Asin (string) maxLength
            if(this.Asin != null && this.Asin.Length > 10)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Asin, length must be less than 10.", new [] { "Asin" });
            }

            // Asin (string) minLength
            if(this.Asin != null && this.Asin.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Asin, length must be greater than 1.", new [] { "Asin" });
            }

            // Fnsku (string) maxLength
            if(this.Fnsku != null && this.Fnsku.Length > 10)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Fnsku, length must be less than 10.", new [] { "Fnsku" });
            }

            // Fnsku (string) minLength
            if(this.Fnsku != null && this.Fnsku.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Fnsku, length must be greater than 1.", new [] { "Fnsku" });
            }

            // Msku (string) maxLength
            if(this.Msku != null && this.Msku.Length > 40)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Msku, length must be less than 40.", new [] { "Msku" });
            }

            // Msku (string) minLength
            if(this.Msku != null && this.Msku.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Msku, length must be greater than 1.", new [] { "Msku" });
            }

            yield break;
        }
    }

}
