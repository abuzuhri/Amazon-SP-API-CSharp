/* 
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace FikaAmazonAPI.AmazonSpApiSDK.Models.FulfillmentInbound
{
    /// <summary>
    /// GetTransportDetailsResult
    /// </summary>
    [DataContract]
    public partial class GetTransportDetailsResult : IEquatable<GetTransportDetailsResult>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetTransportDetailsResult" /> class.
        /// </summary>
        /// <param name="transportContent">transportContent.</param>
        public GetTransportDetailsResult(TransportContent transportContent = default(TransportContent))
        {
            this.TransportContent = transportContent;
        }

        /// <summary>
        /// Gets or Sets TransportContent
        /// </summary>
        [DataMember(Name = "TransportContent", EmitDefaultValue = false)]
        public TransportContent TransportContent { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetTransportDetailsResult {\n");
            sb.Append("  TransportContent: ").Append(TransportContent).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetTransportDetailsResult);
        }

        /// <summary>
        /// Returns true if GetTransportDetailsResult instances are equal
        /// </summary>
        /// <param name="input">Instance of GetTransportDetailsResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetTransportDetailsResult input)
        {
            if (input == null)
                return false;

            return
                (
                    this.TransportContent == input.TransportContent ||
                    (this.TransportContent != null &&
                    this.TransportContent.Equals(input.TransportContent))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TransportContent != null)
                    hashCode = hashCode * 59 + this.TransportContent.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}