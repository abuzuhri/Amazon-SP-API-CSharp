/* 
 * The Selling Partner API for Finances
 *
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order or date range without having to wait until a statement period closes.
 *
 * OpenAPI spec version: 2024-06-19
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace FikaAmazonAPI.AmazonSpApiSDK.Models.Finances.Model
{
    /// <summary>
    /// Related business identifiers of the item.
    /// </summary>
    [DataContract]
    public partial class ItemRelatedIdentifier :  IEquatable<ItemRelatedIdentifier>, IValidatableObject
    {
        /// <summary>
        /// Enumerated set of related item identifier names for the item.
        /// </summary>
        /// <value>Enumerated set of related item identifier names for the item.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ItemRelatedIdentifierNameEnum
        {
            
            /// <summary>
            /// Enum ORDERADJUSTMENTITEMID for value: ORDER_ADJUSTMENT_ITEM_ID
            /// </summary>
            [EnumMember(Value = "ORDER_ADJUSTMENT_ITEM_ID")]
            ORDERADJUSTMENTITEMID = 1,
            
            /// <summary>
            /// Enum COUPONID for value: COUPON_ID
            /// </summary>
            [EnumMember(Value = "COUPON_ID")]
            COUPONID = 2,
            
            /// <summary>
            /// Enum REMOVALSHIPMENTITEMID for value: REMOVAL_SHIPMENT_ITEM_ID
            /// </summary>
            [EnumMember(Value = "REMOVAL_SHIPMENT_ITEM_ID")]
            REMOVALSHIPMENTITEMID = 3,
            
            /// <summary>
            /// Enum TRANSACTIONID for value: TRANSACTION_ID
            /// </summary>
            [EnumMember(Value = "TRANSACTION_ID")]
            TRANSACTIONID = 4
        }

        /// <summary>
        /// Enumerated set of related item identifier names for the item.
        /// </summary>
        /// <value>Enumerated set of related item identifier names for the item.</value>
        [DataMember(Name="itemRelatedIdentifierName", EmitDefaultValue=false)]
        public ItemRelatedIdentifierNameEnum? ItemRelatedIdentifierName { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemRelatedIdentifier" /> class.
        /// </summary>
        /// <param name="itemRelatedIdentifierName">Enumerated set of related item identifier names for the item..</param>
        /// <param name="itemRelatedIdentifierValue">Corresponding value of ItemRelatedIdentifierName.</param>
        public ItemRelatedIdentifier(ItemRelatedIdentifierNameEnum? itemRelatedIdentifierName = default(ItemRelatedIdentifierNameEnum?), string itemRelatedIdentifierValue = default(string))
        {
            this.ItemRelatedIdentifierName = itemRelatedIdentifierName;
            this.ItemRelatedIdentifierValue = itemRelatedIdentifierValue;
        }
        

        /// <summary>
        /// Corresponding value of ItemRelatedIdentifierName
        /// </summary>
        /// <value>Corresponding value of ItemRelatedIdentifierName</value>
        [DataMember(Name="itemRelatedIdentifierValue", EmitDefaultValue=false)]
        public string ItemRelatedIdentifierValue { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ItemRelatedIdentifier {\n");
            sb.Append("  ItemRelatedIdentifierName: ").Append(ItemRelatedIdentifierName).Append("\n");
            sb.Append("  ItemRelatedIdentifierValue: ").Append(ItemRelatedIdentifierValue).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ItemRelatedIdentifier);
        }

        /// <summary>
        /// Returns true if ItemRelatedIdentifier instances are equal
        /// </summary>
        /// <param name="input">Instance of ItemRelatedIdentifier to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ItemRelatedIdentifier input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ItemRelatedIdentifierName == input.ItemRelatedIdentifierName ||
                    (this.ItemRelatedIdentifierName != null &&
                    this.ItemRelatedIdentifierName.Equals(input.ItemRelatedIdentifierName))
                ) && 
                (
                    this.ItemRelatedIdentifierValue == input.ItemRelatedIdentifierValue ||
                    (this.ItemRelatedIdentifierValue != null &&
                    this.ItemRelatedIdentifierValue.Equals(input.ItemRelatedIdentifierValue))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ItemRelatedIdentifierName != null)
                    hashCode = hashCode * 59 + this.ItemRelatedIdentifierName.GetHashCode();
                if (this.ItemRelatedIdentifierValue != null)
                    hashCode = hashCode * 59 + this.ItemRelatedIdentifierValue.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
